#!/usr/bin/env node
/**
 * Script tempor√°rio para buscar defini√ß√µes do Airbyte usando credenciais espec√≠ficas
 *
 * ATEN√á√ÉO: Este script cont√©m credenciais e deve ser substitu√≠do
 * por uma solu√ß√£o que use vari√°veis de ambiente.
 */

import {
  configureAirbyteClient,
  refreshDefinitions
} from '../lib/airbyte-client';

// Credenciais tempor√°rias
const AIRBYTE_CLIENT_ID = 'b2032060-54c5-44fd-b6c9-a86a34a0006c';
const AIRBYTE_CLIENT_SECRET = '0jJO7g7RB2Uf2WEtdPHgLWTLrCseL6Q3';
const AIRBYTE_API_URL = 'http://localhost:8000/api/v1';

async function main() {
  console.log('üöÄ Iniciando busca de defini√ß√µes Airbyte com credenciais tempor√°rias...');
  
  try {
    // Configurar cliente com credenciais tempor√°rias
    configureAirbyteClient({
      apiUrl: AIRBYTE_API_URL,
      clientId: AIRBYTE_CLIENT_ID,
      clientSecret: AIRBYTE_CLIENT_SECRET
    });
    
    console.log('Cliente Airbyte configurado com credenciais tempor√°rias');
    
    // Usar a fun√ß√£o do cliente para buscar e salvar defini√ß√µes
    const { sources, destinations } = await refreshDefinitions();
    
    console.log('\n‚úÖ Defini√ß√µes salvas com sucesso!');
    console.log(`üì¶ ${sources.length} defini√ß√µes de sources`);
    console.log(`üì¶ ${destinations.length} defini√ß√µes de destinations`);
    
    console.log('\n‚ö†Ô∏è LEMBRETE: Este script usa credenciais tempor√°rias e deve ser substitu√≠do');
    console.log('   por uma solu√ß√£o que use vari√°veis de ambiente.');
    
    process.exit(0);
  } catch (error) {
    console.error('\n‚ùå Erro ao buscar ou salvar defini√ß√µes:');
    console.error(error);
    process.exit(1);
  }
}

// Executar o script
main();